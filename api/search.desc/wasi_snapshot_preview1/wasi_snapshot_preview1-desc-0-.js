searchState.loadedDescShard("wasi_snapshot_preview1", 0, "Close a descriptor previously opened using …\nAllocate a file descriptor which will generate an …\nRead command-line argument data. The size of the array …\nReturn command-line argument data sizes.\nReturn the resolution of a clock. Implementations are …\nReturn the time value of a clock. Note: This is similar to …\nRead environment variable data. The sizes of the buffers …\nReturn environment variable data sizes.\nProvide file advisory information on a file descriptor. …\nForce the allocation of space in a file. Note: This is …\nClose a file descriptor. Note: This is similar to <code>close</code> in …\nSynchronize the data of a file to disk. Note: This is …\nGet the attributes of a file descriptor. Note: This …\nAdjust the flags associated with a file descriptor. Note: …\nDoes not do anything if <code>fd</code> corresponds to a valid …\nReturn the attributes of an open file.\nAdjust the size of an open file. If this increases the file…\nAdjust the timestamps of an open file or directory. Note: …\nRead from a file descriptor, without using and updating …\nReturn a description of the given preopened file …\nReturn a description of the given preopened file …\nWrite to a file descriptor, without using and updating the …\nRead from a file descriptor. Note: This is similar to <code>readv</code>…\nAtomically replace a file descriptor by renumbering …\nMove the offset of a file descriptor. Note: This is …\nSynchronize the data and metadata of a file to disk. Note: …\nReturn the current offset of a file descriptor. Note: This …\nWrite to a file descriptor. Note: This is similar to <code>writev</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a directory. Note: This is similar to <code>mkdirat</code> in …\nReturn the attributes of a file or directory. Note: This …\nAdjust the timestamps of a file or directory. Note: This …\nCreate a hard link. Note: This is similar to <code>linkat</code> in …\nOpen a file or directory. The returned file descriptor is …\nRead the contents of a symbolic link. Note: This is …\nRemove a directory. Return <code>errno::notempty</code> if the …\nRename a file or directory. Note: This is similar to …\nCreate a symbolic link. Note: This is similar to <code>symlinkat</code> …\nUnlink a file. Return <code>errno::isdir</code> if the path refers to a …\nConcurrently poll for the occurrence of a set of events.\nTerminate the process normally. An exit code of 0 …\nSend a signal to the process of the calling thread. Note: …\nWrite high-quality random data into a buffer. This …\nTemporarily yield execution of the calling thread. Note: …\nAccept a new incoming connection. Note: This is similar to …\nReceive a message from a socket. Note: This is similar to …\nSend a message on a socket. Note: This is similar to <code>send</code> …\nShut down socket send and receive channels. Note: This is …\nGet the POSIX-style arguments to the program.\nReturn a path that programs should use as their initial …\nExit the current instance and any linked instances.\nThe input side of a terminal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe output side of a terminal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf stderr is connected to a terminal, return a …\nIf stdin is connected to a terminal, return a …\nIf stdout is connected to a terminal, return a …\nA duration of time, in nanoseconds.\nAn instant in time, in nanoseconds. An instant is relative …\nRead the current value of the clock.\nQuery the resolution of the clock. Returns the duration of …\nCreate a <code>pollable</code> which will resolve once the given …\nCreate a <code>pollable</code> which will resolve once the specified …\nA time and date in seconds plus nanoseconds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead the current value of the clock.\nQuery the resolution of the clock.\nReturn the set of preopened directories, and their path.\nPermission denied, similar to <code>EACCES</code> in POSIX.\nFile or memory access pattern advisory information.\nConnection already in progress, similar to <code>EALREADY</code> in …\nBad descriptor, similar to <code>EBADF</code> in POSIX.\nThe descriptor refers to a block device inode.\nDevice or resource busy, similar to <code>EBUSY</code> in POSIX.\nCreate file if it does not exist, similar to <code>O_CREAT</code> in …\nThe descriptor refers to a character device inode.\nCross-device link, similar to <code>EXDEV</code> in POSIX.\nRequest that writes be performed according to synchronized …\nFail if not a directory, similar to <code>O_DIRECTORY</code> in POSIX.\nResource deadlock would occur, similar to <code>EDEADLK</code> in POSIX.\nA descriptor is a reference to a filesystem object, which …\nDescriptor flags.\nFile attributes.\nThe type of a filesystem object referenced by a descriptor.\nThe descriptor refers to a directory inode.\nA directory entry.\nA stream of directory entries.\nThe application expects that it will not access the …\nFail if file already exists, similar to <code>O_EXCL</code> in POSIX.\nError codes returned by functions, similar to <code>errno</code> in …\nFile exists, similar to <code>EEXIST</code> in POSIX.\nRequest that writes be performed according to synchronized …\nThe descriptor refers to a named pipe.\nFile too large, similar to <code>EFBIG</code> in POSIX.\nFile size or length of a region within a file.\nIllegal byte sequence, similar to <code>EILSEQ</code> in POSIX.\nOperation in progress, similar to <code>EINPROGRESS</code> in POSIX.\nNot enough space, similar to <code>ENOMEM</code> in POSIX.\nNo space left on device, similar to <code>ENOSPC</code> in POSIX.\nInterrupted function, similar to <code>EINTR</code> in POSIX.\nInvalid argument, similar to <code>EINVAL</code> in POSIX.\nInvalid seek, similar to <code>ESPIPE</code> in POSIX.\nI/O error, similar to <code>EIO</code> in POSIX.\nIs a directory, similar to <code>EISDIR</code> in POSIX.\nNumber of hard links to an inode.\nToo many levels of symbolic links, similar to <code>ELOOP</code> in …\nMutating directories mode: Directory contents may be …\nMessage too large, similar to <code>EMSGSIZE</code> in POSIX.\nA 128-bit hash value, split into parts because wasm doesn…\nFilename too long, similar to <code>ENAMETOOLONG</code> in POSIX.\nWhen setting a timestamp, this gives the value to set it …\nLeave the timestamp set to its previous value.\nNo such device, similar to <code>ENODEV</code> in POSIX.\nNo such file or directory, similar to <code>ENOENT</code> in POSIX.\nNo locks available, similar to <code>ENOLCK</code> in POSIX.\nThe application expects to access the specified data once …\nNo such device or address, similar to <code>ENXIO</code> in POSIX.\nInappropriate I/O control operation, similar to <code>ENOTTY</code> in …\nThe application has no advice to give on its behavior with …\nNot a directory or a symbolic link to a directory, similar …\nDirectory not empty, similar to <code>ENOTEMPTY</code> in POSIX.\nOperation not permitted, similar to <code>EPERM</code> in POSIX.\nState not recoverable, similar to <code>ENOTRECOVERABLE</code> in POSIX.\nSet the timestamp to the current time of the system clock …\nOpen flags used by <code>open-at</code>.\nValue too large to be stored in data type, similar to …\nFlags determining the method of how paths are resolved.\nBroken pipe, similar to <code>EPIPE</code> in POSIX.\nStorage quota exceeded, similar to <code>EDQUOT</code> in POSIX.\nRead mode: Data can be read.\nRequests that reads be performed at the same level of …\nThe application expects to access the specified data in a …\nRead-only file system, similar to <code>EROFS</code> in POSIX.\nThe descriptor refers to a regular file inode.\nAs long as the resolved path corresponds to a symbolic …\nThe application expects to access the specified data …\nThe descriptor refers to a socket.\nThe file refers to a symbolic link inode.\nTruncate file to size 0, similar to <code>O_TRUNC</code> in POSIX.\nText file busy, similar to <code>ETXTBSY</code> in POSIX.\nSet the timestamp to the given value.\nToo many links, similar to <code>EMLINK</code> in POSIX.\nThe type of the descriptor or file is unknown or is …\nNot supported, similar to <code>ENOTSUP</code> and <code>ENOSYS</code> in POSIX.\nWrite mode: Data can be written to.\nThe application expects to access the specified data in …\nResource unavailable, or operation would block, similar to …\nProvide file advisory information on a descriptor.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nReturn a stream for appending to a file, if available.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCreate a directory.\nLast data access timestamp.\nLast data modification timestamp.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nAttempts to extract a filesystem-related <code>error-code</code> from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet flags associated with a descriptor.\nGet the dynamic type of a descriptor.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nTest whether two descriptors refer to the same filesystem …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nCreate a hard link.\nNumber of hard links to the file.\n64 bits of a 128-bit hash value.\nReturn a hash of the metadata associated with a filesystem …\nReturn a hash of the metadata associated with a filesystem …\nThe name of the object.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nOpen a file or directory.\nRead from a descriptor, without using and updating the …\nRead directory entries from a directory.\nRead a single directory entry from a <code>directory-entry-stream</code>…\nReturn a stream for reading from a file, if available.\nRead the contents of a symbolic link.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemove a directory.\nRename a filesystem object.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nAdjust the size of an open file. If this increases the file…\nAdjust the timestamps of an open file or directory.\nAdjust the timestamps of a file or directory.\nFor regular files, the file size in bytes. For symbolic …\nReturn the attributes of an open file or directory.\nReturn the attributes of a file or directory.\nLast file status-change timestamp.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCreate a symbolic link (also known as a “symlink”).\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSynchronize the data and metadata of a file to disk.\nSynchronize the data of a file to disk.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nFile type.\nThe type of the file referred to by this directory entry.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnlink a filesystem object that is not a directory.\nAnother 64 bits of a 128-bit hash value.\nWrite to a descriptor, without using and updating the …\nReturn a stream for writing to a file, if available.\nA resource which represents some error information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a string that is suitable to assist humans in …\n<code>pollable</code> represents a single I/O event which may be ready, …\n<code>block</code> returns immediately if the pollable is ready, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn the readiness of a pollable. This function never …\nThe stream is closed: no more input will be accepted by the\nAn input bytestream.\nThe last operation (a write or flush) failed before …\nAn output bytestream.\nAn error for input-stream and output-stream operations.\nRequest to flush buffered output, and block until flush …\nRead bytes from a stream, after blocking until at least …\nSkip bytes from a stream, after blocking until at least …\nRead from one stream and write to another, with blocking.\nPerform a write of up to 4096 bytes, and then flush the …\nPerform a write of up to 4096 zeroes, and then flush the …\nCheck readiness for writing. This function never blocks.\nRequest to flush buffered output. This function never …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform a non-blocking read from the stream.\nSkip bytes from a stream. Returns number of bytes skipped.\nRead from one stream and write to another.\nCreate a <code>pollable</code> which will resolve once either the …\nCreate a <code>pollable</code> which will resolve once the output-stream\nPerform a write. This function never blocks.\nWrite zeroes to a stream.\nReturn <code>len</code> insecure pseudo-random bytes.\nReturn an insecure pseudo-random <code>u64</code> value.\nReturn a 128-bit value that may contain a pseudo-random …\nReturn <code>len</code> cryptographically-secure random or …\nReturn a cryptographically-secure random or pseudo-random …\nGet a handle to the default network.\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResolve an internet host name to a list of IP addresses.\nReturns the next address from the resolver.\nCreate a <code>pollable</code> which will resolve once the stream is …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nError codes.\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nAn opaque resource that represents access to (a subset of) …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nsin_addr\nsin6_addr\nsin6_flowinfo\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsin_port\nsin6_port\nsin6_scope_id\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nSimilar to <code>SHUT_RDWR</code> in POSIX.\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nSimilar to <code>SHUT_RD</code> in POSIX.\nThe remote address is not reachable\nSimilar to <code>SHUT_WR</code> in POSIX.\nA TCP socket resource.\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nAccept a new client socket.\nWhether this is a IPv4 or IPv6 socket.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEquivalent to the IP_TTL &amp; IPV6_UNICAST_HOPS socket …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the socket is in the <code>listening</code> state.\nThe maximum amount of keepalive packets TCP should send …\nEnables or disables keepalive.\nAmount of time the connection has to be idle before TCP …\nThe time between keepalive packets.\nGet the bound local address.\nThe kernel buffer space reserved for sends/receives on …\nGet the remote address.\nHints the desired listen queue size. Implementations are …\nInitiate a graceful shutdown.\nBind the socket to a specific network on the provided IP …\nConnect to a remote endpoint.\nStart listening for new connections.\nCreate a <code>pollable</code> which can be used to poll for, or block …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nCreate a new TCP socket.\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nA received datagram.\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA datagram to be sent out.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nA UDP socket handle.\nUnknown error\nThe operation has been aborted because it could not be …\nWhether this is a IPv4 or IPv6 socket.\nCheck readiness for sending. This function never blocks.\nThe payload.\nThe payload.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the current bound address.\nReceive messages on the socket.\nThe kernel buffer space reserved for sends/receives on …\nGet the address the socket is currently streaming to.\nThe source address.\nThe destination address.\nSend messages on the socket.\nBind the socket to a specific network on the provided IP …\nSet up inbound &amp; outbound communication channels, …\nCreate a <code>pollable</code> which will resolve once the socket is …\nCreate a <code>pollable</code> which will resolve once the stream is …\nCreate a <code>pollable</code> which will resolve once the stream is …\nEquivalent to the IP_TTL &amp; IPV6_UNICAST_HOPS socket …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nCreate a new UDP socket.")