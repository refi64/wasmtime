searchState.loadedDescShard("winch_codegen", 0, "Code generation library for Winch.\nProvides the ABI signatures for each builtin function …\nThe function environment.\nThe built-in functions available to the JIT code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns true if Spectre mitigations are enabled for heap …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a name to reference the <code>builtin</code> provided.\nCreates a name to reference the wasm function <code>index</code> …\nCreate a new function environment.\nResolves <code>GlobalData</code> of a global at the given index.\nResolve a <code>HeapData</code> from a MemoryIndex.\nReturns the table information for the given table index.\nReturns true if Spectre mitigations are enabled for table …\nGet a <code>TablePlan</code> from a <code>TableIndex</code>.\nExtracts the name map that was created while translating …\nMetadata about the translation process of a WebAssembly …\nThe module’s function types.\nOffsets to the fields within the <code>VMContext</code> ptr.\nSee cranelift_codegen::isa::CallConv::AppleAarch64\nCalling conventions supported by Winch. Winch supports a …\nThe default calling convention for Winch. It largely …\nSee cranelift_codegen::isa::CallConv::WasmtimeSystemV\nA trait representing commonalities between the supported …\nSee cranelift_codegen::isa::CallConv::WindowsFastcall\nCompile a function.\nSee <code>cranelift_codegen::isa::TargetIsa::create_systemv_cie</code>.\nGet the default calling convention of the underlying …\nGet the endianness of the underlying target triple.\nGet the ISA-independent flags that were used to make this …\nReturns the argument unchanged.\nSee <code>cranelift_codegen::isa::TargetIsa::function_alignment</code>.\nCalls <code>U::from(self)</code>.\nGet a flag indicating whether branch protection is enabled.\nReturns true if the current calling convention is <code>Default</code>.\nGet the ISA-dependent flag values that were used to make …\nLook for an ISA builder for the given target triple.\nGet the name of the ISA.\nReturns the pointer width of the ISA in bytes.\nSee <code>cranelift_codegen::isa::TargetIsa::text_section_builder</code>…\nGet the target triple of the ISA.\nDerive Wasmtime’s calling convention from the triple’s …")